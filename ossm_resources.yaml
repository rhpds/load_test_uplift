---
apiVersion: v1
kind: Service
metadata:
  name: winmesh
spec:
  selector:
    env: winmesh
  ports:
  - protocol: TCP
    name: http
    port: 80
    targetPort: 80
---
kind: DestinationRule
apiVersion: networking.istio.io/v1beta1
metadata:
  name: winmesh
  annotations:
    argocd.argoproj.io/sync-wave: "3"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    kiali_wizard: request_routing
spec:
  host: winmesh.windowsmesh-user{{user_index}}.svc.cluster.local
  subsets:
    - name: v1
      labels:
        version: v1
    - name: v2
      labels:
        version: v2
---
kind: Gateway
apiVersion: networking.istio.io/v1beta1
metadata:
  name: winmesh-gateway
  annotations:
    argocd.argoproj.io/sync-wave: "3"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    kiali_wizard: request_routing
spec:
  servers:
    - port:
        number: 80
        protocol: HTTP
        name: http
      hosts:
        - 'user{{user_index}}-istio-system.{{deployer_domain}}'
  selector:
    istio: ingressgateway
---
kind: VirtualService
apiVersion: networking.istio.io/v1beta1
metadata:
  name: winmesh
  annotations:
    argocd.argoproj.io/sync-wave: "3"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    kiali_wizard: request_routing
spec:
  hosts:
    - 'user{{user_index}}-istio-system.{{deployer_domain}}'
  gateways:
    - windowsmesh-user{{user_index}}/winmesh-gateway
  http:
    - route:
        - destination:
            host: winmesh.windowsmesh-user{{user_index}}.svc.cluster.local
            subset: v1
          weight: 50
        - destination:
            host: winmesh.windowsmesh-user{{user_index}}.svc.cluster.local
            subset: v2
          weight: 50
